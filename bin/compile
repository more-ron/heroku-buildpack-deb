#!/bin/bash

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

function ensure() {
	name=$1
	url=$2
	sha=$3

	if [ -f $name.deb ]; then
		echo "Detected existing download"
		downloaded_sha=$(sha1sum $name.deb  | cut -d ' ' -f 1)
		if [ "$downloaded_sha" != "$sha" ]; then
			echo "Deleting corrupt download"
			rm "$name.deb"
		else
			return
		fi
	fi

	echo "Downloading $url"
	curl -o "$name.deb" "$url"
	downloaded_sha=$(sha1sum $name.deb  | cut -d ' ' -f 1)
	if [ "$downloaded_sha" != "$sha" ]; then
		echo "Sha1 sums don't match"
		exit 1
	fi
}

DPKG=.dpkg
mkdir -p $BUILD_DIR/$DPKG

cat $BUILD_DIR/debs.txt | while read line; do
	name=$(echo $line | awk -F '|' '{print $1}')
	url=$(echo $line | awk -F '|' '{print $2}')
	sha=$(echo $line | awk -F '|' '{print $3}')
	echo "$name : $url : $sha"
	ensure $name $url $sha
	dpkg -x $name.deb $BUILD_DIR/$DPKG/
done

echo "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_dpkg.sh
export PATH="\$HOME/$DPKG/usr/bin:$PATH"
export LD_LIBRARY_PATH="\$HOME/$DPKG/usr/lib:\$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="\$HOME/$DPKG/usr/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="\$HOME/$DPKG/lib:\$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="\$HOME/$DPKG/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="\$HOME/$DPKG/lib64:\$LD_LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/$DPKG/usr/include:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
EOF

export HOME=$BUILD_DIR
sh $HOME/.profile.d/000_dpkg.sh
